#!/usr/local/bin/node --harmony

var fs = require('fs');
var pathJoin = require('path').join;
var groupDir = pathJoin(__dirname, "..", "groups");

var redirects = [];
var httpSites = {};
var httpsSites = {};

var extras = {
  "creationix.com":
  "  location /api/ {\n" +
  "    proxy_pass http://127.0.0.1:5000;\n" +
  "    proxy_http_version 1.1;\n" +
  "    proxy_set_header Host $host;\n" +
  "  }\n"
}

fs.readdirSync(groupDir).forEach(function (name) {
  var sitesConfig = require(pathJoin(groupDir, name));
  var sslSites = [];
  var sites = [];
  Object.keys(sitesConfig.sites).forEach(function (domain) {
    var config = sitesConfig.sites[domain];
    var root = config.root ? pathJoin("/", config.root, "/") : "/";

    var root = config.root ? pathJoin("/", config.root, "/") : "/";
    var backend = "http://127.0.0.1:" + sitesConfig.port + root;
    var proxy = extras[domain] || "";
    proxy +=
      "  location / {\n" +
      "    proxy_pass " + backend + ";\n" +
      "    proxy_http_version 1.1;\n" +
      "    proxy_set_header Host $host;\n";
    if (config.root) {
      proxy += "    proxy_redirect default;\n";
      proxy += "    proxy_redirect " + root + " /;\n";
    }
    proxy += "  }\n";

    var top = config.ssl ? httpsSites : httpSites;
    var list = top[proxy] || (top[proxy] = []);
    list.push(domain);

    if (config.ssl) {
      redirects.push(domain);
    }
  });
});

Object.keys(httpSites).forEach(function (proxy) {
  var list = httpSites[proxy];
  console.log(
    "server{\n" +
    list.map(serverName).join("") +
    "  listen 80;\n" +
    proxy +
    "}\n"
  );
});

Object.keys(httpsSites).forEach(function (proxy) {
  var list = httpsSites[proxy];
  console.log(
    "server{\n" +
    list.map(serverName).join("") +
    "  listen 443 ssl;\n" +
    "  ssl_certificate /home/tim/startssl/ssl-unified.crt;\n" +
    "  ssl_certificate_key /home/tim/startssl/ssl.key;\n" +
    proxy +
    "}\n"
  );
});

if (redirects.length) {
  console.log(
    "\n# Combined force SSL redirects" +
    "\nserver {\n" +
    "  listen 80;\n" +
    redirects.map(serverName).join("") +
    "  return 301 https://$host$request_uri;\n" +
    "}"
  );
}

function serverName(domain) {
  return "  server_name " + domain + ";\n";
}
